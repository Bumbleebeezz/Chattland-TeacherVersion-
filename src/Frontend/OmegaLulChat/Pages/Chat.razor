@page "/chat"
@using Chattland.DataTransferContract.ChatContracts
@using Chattland.DataTransferContract.DataTransferTypes
@inject IHttpClientFactory _httpClientFactory

<h3>Chat</h3>

<EditForm Model="newChatMessage" >
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name</label>
        <InputText class="form-control" @bind-Value="newChatMessage.SenderDto.Name"></InputText>
    </div>
    <div class="form-group">
        <label>Message</label>
        <InputText class="form-control" @bind-Value="newChatMessage.Message"></InputText>
    </div>
    <button class="btn btn-primary" type="submit">Send Message</button>
</EditForm>
<hr />
<div class="col">
    <Virtualize Items="Messages.OrderByDescending(m=>m.CreatedAt).ToList()" Context="message">
        <li class="card bg-gradient border-3">
            <label class="card-header text-primary text-lg-start">@message.SenderDto.Name</label>
            <p class="card-body ">@message.Message</p>
            <label class="card-footer text-primary text-lg-end">@message.CreatedAt.ToString("HH:mm")</label>
        </li>
    </Virtualize>
</div>

@code {

    public List<ChatMessageModel>? Messages = new();
    public ChatMessageModel newChatMessage = new();

    protected override async Task OnInitializedAsync()
    {
        var client = _httpClientFactory.CreateClient("chatApi");
        var response = await client.GetAsync("/messages/Lobby?start=0&count=0");


        await base.OnInitializedAsync();
    }

    public class ChatMessageModel : IChatMessage
    {
        public MessageSenderDto SenderDto { get; set; } = new ();
        public string Message { get; set; }
        public DateTime CreatedAt { get; set; }
    }
}
